$primary-color: rgb(233, 232, 232);
$secondary-color: rgba(190, 14, 73, 0.877);
$show-home-image: true;
$home-image: url(../img/bg1a.jpg);
$background-opacity: 0.9;

@mixin easeOut {
    transition: all 0.5s ease-out;
}

@mixin background {
    @if $show-home-image {
        &.bg-img {
            background: $home-image;
            background-attachment: fixed;
            background-size: cover;

            &:after {
                content:'';
                position: fixed;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                background: rgba($primary-color, $background-opacity);
            }
        }
    }
}

// Set Text Color
@function set-text-color($color) {
    @if (lightness($color) > 40) {
        @return #000;
    } @else {
        @return #fff;
    }
}

 // Media Query Mixins
 @mixin mediaSm {
     @media screen and (max-width: 500px) {
         @content;
     }
 }

 @mixin mediaMd {
     @media screen and (max-width: 768px) {
         @content;
     }
 }

 @mixin mediaLg {
     @media screen and (min-width: 769px) and (max-width: 1170px) {
         @content;
     }
 }

 @mixin mediaXl {
     @media screen and (min-width: 1171px) {
         @content;
     }
 }

 @mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}